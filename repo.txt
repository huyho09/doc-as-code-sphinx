Directory structure:
└── githubtraining-hellogitworld/
    ├── README.txt
    ├── fix.txt
    ├── pom.xml
    ├── runme.sh
    ├── .travis.yml
    ├── resources/
    │   └── labels.properties
    └── src/
        ├── Division.groovy
        ├── Main.groovy
        ├── Square.groovy
        ├── Subtract.groovy
        ├── Sum.groovy
        ├── main/
        │   └── java/
        │       └── com/
        │           └── github/
        │               └── App.java
        └── test/
            └── java/
                └── com/
                    └── github/
                        └── AppTest.java

================================================
File: README.txt
================================================
This is a sample project students can use during Matthew's Git class.

Here is an addition by me

We can have a bit of fun with this repo, knowing that we can always reset it to a known good state.  We can apply labels, and branch, then add new code and merge it in to the master branch.

As a quick reminder, this came from one of three locations in either SSH, Git, or HTTPS format:

* git@github.com:matthewmccullough/hellogitworld.git
* git://github.com/matthewmccullough/hellogitworld.git
* https://matthewmccullough@github.com/matthewmccullough/hellogitworld.git

We can, as an example effort, even modify this README and change it as if it were source code for the purposes of the class.

This demo also includes an image with changes on a branch for examination of image diff on GitHub.


================================================
File: pom.xml
================================================
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.github</groupId>
  <artifactId>egitdemo</artifactId>
  <packaging>jar</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>egitdemo</name>
  <url>http://maven.apache.org</url>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>


================================================
File: runme.sh
================================================
#!/bin/sh
groovyc src/*.groovy
groovy src/Main.groovy --cp src/

================================================
File: .travis.yml
================================================
sudo: false
language: java


================================================
File: resources/labels.properties
================================================
app.title=Our App
app.welcome=Welcome to the application
app.goodbye=We hope you enjoyed using our application
cli.usage=This application doesn't use a command line interface


================================================
File: src/Division.groovy
================================================
static int divide(int val1, val2) {
    val1 / val2
}

================================================
File: src/Main.groovy
================================================
import static Square.square
import static Division.divide
import static Subtract.subtract
import static Sum.sum

def name = "Matthew"
int programmingPoints = 10

println "Hello ${name}"
println "${name} has at least ${programmingPoints} programming points."
println "${programmingPoints} squared is ${square(programmingPoints)}"
println "${programmingPoints} divided by 2 bonus points is ${divide(programmingPoints, 2)}"
println "${programmingPoints} minus 7 bonus points is ${subtract(programmingPoints, 7)}"
println "${programmingPoints} plus 3 bonus points is ${sum(programmingPoints, 3)}"

================================================
File: src/Square.groovy
================================================
static int square(int base) {
	base * base
}

================================================
File: src/Subtract.groovy
================================================
static int subtract(int val1, val2) {
    val1 - val2
}

================================================
File: src/Sum.groovy
================================================
static int sum(int val1, val2) {
    val1 + val2
}

================================================
File: src/main/java/com/github/App.java
================================================
package com.github;

/**
 * Hello again
 * Hello world!
 * Hello
 */
public class App 
{
    public static void main( String[] args )
    {
    	//Comment
        System.out.println( "Hello World!" );
    }
}

//foo


================================================
File: src/test/java/com/github/AppTest.java
================================================
package com.github;

import junit.framework.Test;
import junit.framework.TestCase;
import junit.framework.TestSuite;

//Pending comments

//Some comments on the master branch
//Added some comments on the branch for the egit demo

/**
 * Unit test for simple App.
 */
public class AppTest 
    extends TestCase
{
    /**
     * Create the test case
     *
     * @param testName name of the test case
     */
    public AppTest( String testName )
    {
        super( testName );
    }

    /**
     * @return the suite of tests being tested
     */
    public static Test suite()
    {
        return new TestSuite( AppTest.class );
    }

    /**
     * Rigourous Test :-)
     */
    public void testApp()
    {
        assertTrue( true );
    }
}


